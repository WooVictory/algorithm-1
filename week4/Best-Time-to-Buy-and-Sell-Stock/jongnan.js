var maxProfit = function (prices) {
	/* 
    #==========================================================================# 
    | 접근 방식 1 : Brute force                                                | 
    |--------------------------------------------------------------------------|
    | 한번의 거래만 존재하므로 사는 날 파는 날을 for문으로 체크                |
    | 즉 day 1에 사고 2, 3, 4, 5, ~ 파는 것을 체크                             |
    | 2중 for문을 돌아야 하므로 i의 개수가 늘어날 수록 시간 초과 확률이 높아짐 |
    #==========================================================================#
    */
	let max = 0;
	for (let i = 0; i < prices.length - 1; i++) {
		for (let j = i + 1; j < prices.length; j++) {
			max = Math.max(max, prices[j] - prices[i]);
		}
	}
	return max;
	/* 
    #===============================================================# 
    | 접근 방식 2                                                   | 
    |---------------------------------------------------------------|
    | prices를 한번 돌면서 최대값과 최소값을 찾음                   |
    | 최소값을 지정할 때, 이전 최대값을 삭제하고 다음 최대값을 설정 |
    | 최대값이 나타날 때마다 이전 (최대 - 최소) 값과 비교           |
    #===============================================================#
    */
	let profit = 0;
	let min = [prices[0], 0],
		max = [prices[0], 0];
	for (let i = 1; i < prices.length; i++) {
		if (prices[i] < min[0]) {
			min = [prices[i], i];
			if (max[1] < i) {
				max = [0, i];
			}
		}
		if (prices[i] > max[0]) {
			max = [prices[i], i];
			profit = Math.max(profit, max[0] - min[0]);
		}
	}
	return profit;
	/* 
    #=======================================================================================# 
    | 솔루션 방식                                                                           | 
    |---------------------------------------------------------------------------------------|
    | 방식 2에서 최대값을 초기화 할 필요없이 최소값만 설정하고 다음 최소값이 나오기 전까지  |
    | 최대값 - 최소값을 계속해서 비교                                                       |
    | 왜? 어차피 최소값을 설정하고 다음 값들이 최소값이 아니라면 최대값일 수도 있기 때문이며|
    | 최대값이라고 생각되는 수는 최소값의 무조건 다음으로 나올 것이기 때문                  |
    #=======================================================================================#
    */
	let min = Infinity;
	let profit = 0;
	for (let i = 0; i < prices.length; i++) {
		if (prices[i] < min) {
			min = prices[i];
			continue;
		}
		profit = Math.max(profit, prices[i] - min);
	}
	return profit;
};
