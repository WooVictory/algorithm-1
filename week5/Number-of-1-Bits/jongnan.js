var hammingWeight = function (n) {
	/* 
    #===========================================================# 
    | 접근 방식 1                                               | 
    |-----------------------------------------------------------|
    | 숫자를 2진법으로 변경한 뒤, split을 통해 배열로 변경      |
    | 그 후, 1의 개수를 카운팅                                  |
    #===========================================================#
    */
	return n
		.toString(2)
		.split('')
		.reduce((cnt, val) => {
			if (val === '1') cnt += 1;
			return cnt;
		}, 0);

	/* 
    #===========================================================# 
    | 솔루션 방식 1                                             | 
    |-----------------------------------------------------------|
    | 1을 시작으로 총 32번을 좌 쉬프트하면서 & 연산자로         |
    | 해당 위치가 1인지 확인                                    |
    #===========================================================#
    */
	let cnt = 0;
	let mask = 1;
	for (let i = 0; i < 32; i++) {
		if ((n & mask) != 0) cnt++;
		mask <<= 1;
	}
	return cnt;
	/* 
    #===========================================================# 
    | 솔루션 방식 2                                             | 
    |-----------------------------------------------------------|
    | 2번은 이해가 가지 않음                                    |
    #===========================================================#
    */
};
