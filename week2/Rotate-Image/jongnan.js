var rotate = function (matrix) {
	// 처음 접근 방식

	// 계층을 나누어서 확인
	// 여기서 계층이란,
	// 1 2 3
	// 4 5 6
	// 7 8 9
	// 라는 배열이 있을때, 첫번째 계층은 1, 2, 3, 6, 9, 8, 7, 4 (시계방향)
	// 두번째 계층은 5

	// 여기서 묶어서 1,2,3 -> 3,6,9 식으로 변경해버리면 다음 과정에서 문제가 발생
	// 1 2 1
	// 4 5 2   temp = 3,6,9;
	// 7 8 3

	// 다음에 3,6,9 -> 7,8,9 이므로 temp에 7,8,9를 저장해야되나 이미 3이 덮어씌여져서 7,8,3이 저장

	// 따라서 묶어서가 아닌 개인적으로 변경
	// 1(0,0) -> 3(0,2) -> 9(2,2) -> 7(2,0) -> 1(0,0)
	// 2(0,1) -> 6(1,2) -> 8(2,1) -> 4(1,0) -> 2(0,1)
	// 다음과 같이 규칙이 필요

	//  1  2  3  4
	//  5  6  7  8
	//  9 10 11 12
	// 13 14 15 16

	// 1 ->  4 -> 16 -> 13 -> 1
	// 2 ->  8 -> 15 ->  9 -> 2
	// 3 -> 12 -> 14 ->  5 -> 3
	// 6 ->  7 -> 11 -> 10 -> 6

	// 규칙을 찾으면 (r, c)이고 크기가 N*N 이라고 할 때,
	// r, c -> c, N-r-1 -> N-r-1, N-c-1 -> N-c-1, r -> r, c

	const size = matrix.length;

	for (i = 0; i < Math.floor(size / 2); i++) {
		for (j = i; j < size - i - 1; j++) {
			tmp = matrix[size - j - 1][i];
			matrix[size - j - 1][i] = matrix[size - i - 1][size - j - 1];
			matrix[size - i - 1][size - j - 1] = matrix[j][size - i - 1];
			matrix[j][size - i - 1] = matrix[i][j];
			matrix[i][j] = tmp;
		}
	}
};
